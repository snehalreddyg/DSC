//merge sort
#include<stdio.h> 
void merge(int a[],int low,int mid,int high)
{
    int n1,n2,l[20],m[20];
    n1=mid-low+1;
    n2=high-mid;
    int i,j,k;
    for(i=0;i<n1;i++) 
    l[i]=a[low+i];
    for(j=0;j<n2;j++)
    m[j]=a[mid+1+j];
    i=j=0;
    k=low;
    while(i<n1&&j<n2)
    {
        if(l[i]<=m[j])
        {
            a[k]=l[i];
            i++;
        }
        else 
        {
            a[k]=m[j];
            j++;
        }
        k++;
    } 
    while(i<n1)
    {
        a[k]=l[i];
        i++;
        k++;
    }
    while(j<n2)
    {
        a[k]=m[j];
        j++;
        k++;
        
    }
    
}
void mergesort(int a[],int l,int h)
{
    int m;
    if(l<h)
    {
        m=(h+l)/2; 
        mergesort(a,l,m);
        mergesort(a,m+1,h);
        merge(a,l,m,h);
        
    }
    
} 
int main()
{
    int a[100],n,i;
    printf("\n size = ");
    scanf("%d",&n);
    printf("\n enter elements \n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    } 
    printf("\n elements before sorting");
    for(i=0;i<n;i++)
    {
        printf("%3d",a[i]);
    }
    mergesort(a,0,n-1);
    printf("\n elements after sorting\n");
    for(i=0;i<n;i++)
    {
        printf("%3d",a[i]);
    }
    return(0);
}